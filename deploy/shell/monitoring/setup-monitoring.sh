#!/bin/bash

# Master Monitoring Setup Script for MindX AKS Infrastructure
# Orchestrates the complete monitoring, logging, and alerting setup

set -e

# Get absolute paths
SCRIPT_PATH="$(cd "$(dirname "$0")" && pwd)"
PROJECT_ROOT="$(cd "$SCRIPT_PATH/../../.." && pwd)"

# Change to project root directory
cd "$PROJECT_ROOT"

# Configuration
INSIGHTS_DIR="$PROJECT_ROOT/deploy/chart/insights"
SCRIPT_DIR="$PROJECT_ROOT/deploy/shell/monitoring"

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

log() {
    echo -e "${BLUE}[$(date '+%Y-%m-%d %H:%M:%S')]${NC} $1"
}

log_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

log_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

log_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

log_step() {
    echo -e "${PURPLE}üîÑ STEP $1: $2${NC}"
    echo "================================================================"
}

echo -e "${CYAN}"
cat << "EOF"
üîç MindX AKS Infrastructure Monitoring Setup
============================================
   
   ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
   ‚îÇ  üìä Azure Monitor Integration           ‚îÇ
   ‚îÇ  üìà Prometheus & Grafana                ‚îÇ
   ‚îÇ  üîß Application Instrumentation         ‚îÇ
   ‚îÇ  üö® Comprehensive Alerting              ‚îÇ
   ‚îÇ  üìã Custom Dashboards                   ‚îÇ
   ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò

EOF
echo -e "${NC}"

echo "This script will set up comprehensive monitoring for:"
echo "‚Ä¢ Azure Application Insights integration"
echo "‚Ä¢ Container Insights for AKS"
echo "‚Ä¢ Prometheus metrics collection"
echo "‚Ä¢ Grafana dashboards and visualization"
echo "‚Ä¢ Application instrumentation"
echo "‚Ä¢ Infrastructure and application alerts"
echo "‚Ä¢ Log aggregation and analysis"
echo ""
echo "üìÅ Using YAML configurations from: $INSIGHTS_DIR"
echo ""

# Verify insights directory exists
if [ ! -d "$INSIGHTS_DIR" ]; then
    log_error "Insights directory not found at $INSIGHTS_DIR"
    log_error "Please ensure the YAML configurations are available"
    exit 1
fi

read -p "üöÄ Do you want to proceed with the complete monitoring setup? (y/N): " -n 1 -r
echo
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    echo "‚ùå Setup cancelled by user"
    exit 1
fi

echo ""
log "üéØ Starting comprehensive monitoring setup..."

# Step 1: Azure Monitor Integration
log_step "1" "Azure Monitor Integration"
if [ -f "$SCRIPT_DIR/azure-monitor-setup.sh" ]; then
    chmod +x "$SCRIPT_DIR/azure-monitor-setup.sh"
    "$SCRIPT_DIR/azure-monitor-setup.sh"
    log_success "Azure Monitor integration completed"
else
    log_error "Azure Monitor setup script not found"
    exit 1
fi

echo ""
read -p "‚è≥ Press Enter to continue to Prometheus & Grafana setup..."

# Step 2: Prometheus and Grafana Setup
log_step "2" "Prometheus & Grafana Deployment"
if [ -f "$SCRIPT_DIR/prometheus-setup.sh" ]; then
    chmod +x "$SCRIPT_DIR/prometheus-setup.sh"
    "$SCRIPT_DIR/prometheus-setup.sh"
    log_success "Prometheus & Grafana deployment completed"
else
    log_error "Prometheus setup script not found"
    exit 1
fi

echo ""
read -p "‚è≥ Press Enter to continue to application instrumentation..."

# Step 3: Application Instrumentation
log_step "3" "Application Instrumentation"
if [ -f "$SCRIPT_DIR/app-instrumentation.sh" ]; then
    chmod +x "$SCRIPT_DIR/app-instrumentation.sh"
    "$SCRIPT_DIR/app-instrumentation.sh"
    log_success "Application instrumentation completed"
else
    log_error "Application instrumentation script not found"
    exit 1
fi

echo ""
read -p "‚è≥ Press Enter to continue to alerts setup..."

# Step 4: Alerts Configuration
log_step "4" "Alerts & Notifications Setup"
if [ -f "$SCRIPT_DIR/alerts-setup.sh" ]; then
    chmod +x "$SCRIPT_DIR/alerts-setup.sh"
    "$SCRIPT_DIR/alerts-setup.sh"
    log_success "Alerts configuration completed"
else
    log_error "Alerts setup script not found"
    exit 1
fi

# Step 5: Final Verification and Summary
log_step "5" "Final Verification & Summary"

echo ""
log "üß™ Performing final verification..."

echo ""
echo "üìã Monitoring Infrastructure Status:"
echo "===================================="

echo ""
echo "üîç Namespaces:"
kubectl get namespaces | grep -E "(azure-monitor|prometheus-system|grafana-system|banv-projects)"

echo ""
echo "üöÄ Key Deployments:"
kubectl get deployments -n prometheus-system | head -5
kubectl get deployments -n grafana-system
kubectl get deployments -n azure-monitor

echo ""
echo "üåê Services:"
kubectl get services -n prometheus-system | grep prometheus | head -3
kubectl get services -n grafana-system | grep grafana
kubectl get services -n banv-projects | grep metrics

echo ""
echo "üìä Monitoring Resources:"
kubectl get prometheusrules -n prometheus-system | head -3
kubectl get servicemonitors -n prometheus-system | head -5
kubectl get secrets -n banv-projects | grep -E "(app-insights|monitoring)"

echo ""
echo "üìÅ YAML Configurations Used:"
echo "=============================="
ls -la "$INSIGHTS_DIR"/*.yaml | wc -l | xargs echo "Total YAML files:"
ls "$INSIGHTS_DIR"/*.yaml | sed 's|.*/||' | sort

echo ""
log_success "Final verification completed!"

# Summary and Next Steps
echo ""
echo -e "${CYAN}üéâ MONITORING SETUP COMPLETED SUCCESSFULLY! üéâ${NC}"
echo ""
echo "üìä What has been configured:"
echo "============================"
echo "‚úÖ Azure Application Insights integration"
echo "‚úÖ Container Insights for AKS cluster"
echo "‚úÖ Prometheus metrics collection"
echo "‚úÖ Grafana dashboards and visualization"
echo "‚úÖ Application instrumentation (frontend & backend)"
echo "‚úÖ Infrastructure and application alerts"
echo "‚úÖ Log Analytics workspace integration"
echo "‚úÖ ServiceMonitors for metrics scraping"
echo "‚úÖ Alertmanager for notifications"
echo ""

echo "üîó Access URLs:"
echo "==============="
echo "üìä Grafana Dashboard: https://grafana-banv-dev.mindx.edu.vn"
echo "   Username: admin"
echo "   Password: MindX2024!"
echo ""
echo "üîó Azure Application Insights:"
echo "   https://portal.azure.com/#@mindx.com.vn/resource/subscriptions/f244cdf7-5150-4b10-b3f2-d4bff23c5f45/resourcegroups/mindx-individual-banv-rg/providers/microsoft.insights/components/mindx-banv-app-insights/overview"
echo ""

echo "üõ†Ô∏è  Port Forward Commands (if needed):"
echo "======================================="
echo "# Grafana"
echo "kubectl port-forward -n grafana-system service/grafana 3000:80"
echo ""
echo "# Prometheus"
echo "kubectl port-forward -n prometheus-system service/prometheus-kube-prometheus-prometheus 9090:9090"
echo ""
echo "# Alertmanager"
echo "kubectl port-forward -n prometheus-system service/prometheus-kube-prometheus-alertmanager 9093:9093"
echo ""

echo "üìß Configuration Required:"
echo "=========================="
echo "1. Update Alertmanager with your email/Slack credentials:"
echo "   kubectl edit secret alertmanager-config -n prometheus-system"
echo ""
echo "2. Configure Azure Monitor alerts:"
echo "   kubectl exec -n azure-monitor deployment/webhook-receiver -- /bin/sh -c \"\$(kubectl get configmap azure-alerts-config -n azure-monitor -o jsonpath='{.data.create-azure-alerts\.sh}')\""
echo ""

echo "üß™ Testing:"
echo "============"
echo "1. Access Grafana dashboard and verify data sources"
echo "2. Check Prometheus targets: http://localhost:9090/targets"
echo "3. Test alerts: /tmp/test-alerts.sh (if created)"
echo "4. Verify Application Insights data in Azure Portal"
echo ""

echo "üìà Key Metrics to Monitor:"
echo "=========================="
echo "‚Ä¢ CPU and Memory usage (nodes and pods)"
echo "‚Ä¢ Application response times and error rates"
echo "‚Ä¢ Certificate expiration dates"
echo "‚Ä¢ Kong Ingress Controller performance"
echo "‚Ä¢ Database connections and OAuth success rates"
echo "‚Ä¢ Disk space and network I/O"
echo ""

echo "üö® Alerts Configured:"
echo "===================="
echo "‚Ä¢ Infrastructure: Node down, high CPU/memory, disk space"
echo "‚Ä¢ Applications: Service down, high error rate, high latency"
echo "‚Ä¢ Security: Certificate expiration and failures"
echo "‚Ä¢ Kong: Ingress controller issues and performance"
echo ""

echo "üéØ Next Steps:"
echo "=============="
echo "1. üìä Access Grafana and explore pre-configured dashboards"
echo "2. üîß Customize dashboards for your specific needs"
echo "3. üìß Configure email/Slack notifications in Alertmanager"
echo "4. üß™ Test alerts to ensure proper notification delivery"
echo "5. üì± Set up mobile alerts for critical issues"
echo "6. üìã Create runbooks for common alert scenarios"
echo "7. üîç Monitor application performance and optimize based on metrics"
echo ""

echo "üí° Application Code Updates Needed:"
echo "===================================="
echo "To fully utilize the monitoring setup, update your application code:"
echo ""
echo "Frontend (React/Vue/Angular):"
echo "‚Ä¢ npm install applicationinsights @prometheus-prom/client"
echo "‚Ä¢ Add Application Insights SDK initialization"
echo "‚Ä¢ Add /metrics and /health endpoints"
echo ""
echo "Backend (Node.js/Express):"
echo "‚Ä¢ npm install applicationinsights prom-client express-prometheus-middleware"
echo "‚Ä¢ Add Application Insights SDK initialization"
echo "‚Ä¢ Add Prometheus metrics middleware"
echo "‚Ä¢ Add /metrics, /health, and /ready endpoints"
echo ""

echo "üìö Documentation:"
echo "=================="
echo "‚Ä¢ Prometheus: https://prometheus.io/docs/"
echo "‚Ä¢ Grafana: https://grafana.com/docs/"
echo "‚Ä¢ Azure Monitor: https://docs.microsoft.com/en-us/azure/azure-monitor/"
echo "‚Ä¢ Application Insights: https://docs.microsoft.com/en-us/azure/azure-monitor/app/app-insights-overview"
echo ""
echo "üìÅ YAML Configurations: $INSIGHTS_DIR"
echo ""

log_success "üéâ Complete monitoring setup finished! Your infrastructure is now fully monitored and ready for production! üéâ"

echo ""
echo -e "${PURPLE}Happy Monitoring! üìä‚ú®${NC}" 